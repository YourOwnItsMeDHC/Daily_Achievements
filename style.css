* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;  /* So, here in the entire web application, we will be able to use width and height */
}

body {
    background-color: #292524;
    color: #fafaf9;
    font-family: "Sono", sans-serif;
    padding: 2.5rem;  /* 40px */
}





/* Main Layout */

.header {
    margin-bottom: 2.5rem;  /* 40px */
    
    padding: 10px;

    display: flex;
    align-items: center;
    justify-content: space-between;
}


.fact-form {
    background-color: #44403c;
    margin-bottom: 2.5rem;  /* 40px */
    padding: 1rem 2.5rem;  /* 16px 40px */
}


.main {
    display: grid;
    grid-template-columns: 15.625rem 1fr;  /* 250px 1fr */
    gap: 3rem;  /* 48px */
}





/* Elements */

.logo {
    display: flex;
    align-items: center;
    gap: 1rem;  /* 16px  ==> Gap between our logo and the heading */ 
}

h1 {
    font-size: 2.625rem;  /* 42 px*/
    text-transform: upercase;
    font-family: "Coiny", sans-serif;

    line-height: 1;
    margin-top: 0.375rem;  /* 6px */
}

.fact {
    font-size: 1.25rem;  /* 20px */
    line-height: 1.4;  /* Gap between each line is 140% */
    font-family: "Sono", sans-serif;
    background-color: #44403c;
    margin-bottom: 1rem;  /* 16px */
    padding: 1rem 1.5rem;  /* 16px 24px */

    display: flex;
    align-items: center;
    gap: 1.5rem;  /* 24px */

    letter-spacing: -1;
}

.tag {
    text-transform: uppercase;
    font-size: 0.875rem;  /* 14px */
    font-family: "Coiny", sans-serif;
    color: #fafaf9;
    padding-top: 0.188rem;  /* 3px */
    padding-left: 0.625rem;  /* 10px */
    padding-right: 0.625rem;  /* 10px */
}

.vote-buttons {
    margin-left: auto;
    
    /* It will automatically adjusts margin from left, for the reaction buttons i.e. it will jsut simply stick towards right side */
}

ul {
    list-style: none;
}

/* ********************************************************************************* */
/* <!-- ****************************** CSS Grid *******************************  --> */
/* ********************************************************************************* */

.test {
    background-color: green;
    margin: 100px;

    display: grid;
    grid-template-columns: 100px 200px 50px; /* Number of columns and the size of each */
    grid-template-rows: 100px 300px;  /* Height of each cell */
    /* Here, 100px will be the height for cells which are at first row */
    /* Here, 300px will be the height for cells which are at second row */

    column-gap: 30px;  /* Gap between each cell with respect to column */
    row-gap: 50px;  /* Gap between each cell with respect to row */

    /* Fractional unit (fr) : https://www.digitalocean.com/community/tutorials/css-css-grid-layout-fr-unit
With CSS Grid Layout, we get a new flexible unit: the Fr unit. Fr is a fractional unit and 1fr is for 1 part of the available space. The following are a few examples of the fr unit at work.  */

grid-template-columns: 100px 20px 1fr;  /* Here, 1fr will occupy rest of the space */

/* Below all the column's width is 1fr, hence they are equally sized coulmns */
grid-template-columns: 1fr 1fr 1fr;

/* Middle column will be double in size as compared to the first and third column */
grid-template-columns: 1fr 2fr 1fr;

/* Mixed Units : https://www.digitalocean.com/community/tutorials/css-css-grid-layout-fr-unit#mixed-units */
grid-template-columns: 100px 20% 1fr;
}

.child {
    background-color: red;
    font-size: 30px;
}

/* ********************************************************************************* */
/* <!-- ****************************** CSS Grid *******************************  --> */
/* ********************************************************************************* */
